from typing import List

import numpy as np


class SingleTimeFit:
    def __init__(
            self,
            model_data: np.ndarray,
            observed_data: np.ndarray
    ):
        """
        Compare data produced by the model to observed data.

        Parameters
        ----------
        model_data
            Data generated by the model
        observed_data
            Observed data
        """
        self.model_data = model_data
        self.observed_data = observed_data

    @property
    def residuals(self) -> np.ndarray:
        """
        The difference between the observed and model data
        """
        return self.observed_data - self.model_data

    @property
    def chi_squared_list(self) -> np.ndarray:
        """
        The squared difference between the observed and model data
        """
        return np.square(
            self.residuals
        )

    @property
    def chi_squared(self):
        """
        The sum of the squared differences between the observed and model data
        """
        return np.sum(self.chi_squared_list)


class MultiTimeFit:
    def __init__(self, single_time_fits: List[SingleTimeFit]):
        self.single_time_fits = single_time_fits

    @property
    def chi_squared(self):
        """
        The sum of the squared differences between the observed and model data
        """
        return sum(
            fit.chi_squared
            for fit
            in self.single_time_fits
        )
